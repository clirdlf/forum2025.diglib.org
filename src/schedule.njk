---
title: Schedule
layout: page.njk
cover: "/static/jonathan-beckman-pDQRQ7lJxZ4-unsplash.webp"
preload:
  - /static/jonathan-beckman-pDQRQ7lJxZ4-unsplash.webp
draft: true
---

<pre>{{ grouped | dump }}</pre>

<div class="mb-8">
  <a href="https://dlfforum2025.sched.com/" target="_blank" class="middle none center rounded-lg bg-black py-3 px-6 font-sans text-lg font-bold text-white shadow-md shadow-black/20 transition-all hover:shadow-lg hover:shadow-black/40 focus:opacity-[0.85] active:opacity-[0.85]">
    View on Sched
  </a>
</div>

{% set grouped = sessions | groupbyIterable("date") %}

<div class="tabs mb-4 flex gap-2 flex-wrap" role="tablist">
  {% for group in grouped %}
    {% set day = group.grouper %}
    <button
      class="tab-btn px-4 py-2 rounded-lg border text-sm font-medium bg-gray-200 transition-all duration-300"
      role="tab"
      aria-selected="false"
      aria-controls="content-{{ day }}"
      id="tab-{{ day }}"
      data-tab="{{ day }}"
    >
      {{ day | date("EEEE, d MMMM yyyy") }}
    </button>
  {% endfor %}
</div>

{% for group in grouped %}
  {% set day = group.grouper %}
  <div
    class="tab-content hidden opacity-0 transition-opacity duration-300"
    role="tabpanel"
    aria-labelledby="tab-{{ day }}"
    id="content-{{ day }}"
    data-tab="{{ day }}"
  >
    <h2 class="text-2xl font-bold mb-4">{{ day | date("EEEE, d MMMM yyyy") }}</h2>

    {% for session in group.items %}
      <div class="mb-6 rounded-lg shadow-md border border-blue-gray-100">
        <div class="bg-blue-gray-50 px-6 py-4 flex flex-col md:flex-row md:items-center justify-between">
          <span class="text-md font-semibold text-blue-gray-800">ðŸ•˜ {{ session.time }}</span>
          <h3 class="text-md font-bold text-blue-800 mt-2 md:mt-0">{{ session.id }}: {{ session.title }}</h3>
        </div>
        <div class="px-6 py-4">
          <p class="font-semibold text-gray-900 mb-1">{{ session.title }}</p>
          <p class="text-gray-700 text-sm mb-2">
            {% for author in session.authors %}
              <span class="underline">{{ author.name }}</span><sup>{{ loop.index }}</sup>{% if not loop.last %}, {% endif %}
            {% endfor %}
          </p>
          <p class="text-gray-600 text-sm mb-3">
            {% for author in session.authors %}
              <sup>{{ loop.index }}</sup>{{ author.affiliation }}{% if not loop.last %}, {% endif %}
            {% endfor %}
          </p>
          <p class="text-sm text-gray-800">{{ session.abstract }}</p>
        </div>
      </div>
    {% endfor %}
  </div>
{% endfor %}

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const tabButtons = document.querySelectorAll(".tab-btn");
    const tabContents = document.querySelectorAll(".tab-content");

    function activateTab(tabId, updateHash = true) {
      tabButtons.forEach(btn => {
        const isActive = btn.getAttribute("data-tab") === tabId;
        btn.classList.toggle("bg-blue-800", isActive);
        btn.classList.toggle("text-white", isActive);
        btn.classList.toggle("bg-gray-200", !isActive);
        btn.setAttribute("aria-selected", isActive ? "true" : "false");
        btn.setAttribute("tabindex", isActive ? "0" : "-1");
      });

      tabContents.forEach(content => {
        const isActive = content.getAttribute("data-tab") === tabId;
        content.classList.toggle("hidden", !isActive);
        content.style.opacity = isActive ? "1" : "0";
      });

      if (updateHash) {
        history.replaceState(null, "", "#" + tabId);
      }
    }

    tabButtons.forEach(btn => {
      btn.addEventListener("click", () => {
        activateTab(btn.getAttribute("data-tab"));
        btn.focus();
      });

      btn.addEventListener("keydown", e => {
        const index = Array.from(tabButtons).indexOf(btn);
        if (e.key === "ArrowRight") {
          e.preventDefault();
          const next = tabButtons[(index + 1) % tabButtons.length];
          next.focus();
          activateTab(next.getAttribute("data-tab"));
        } else if (e.key === "ArrowLeft") {
          e.preventDefault();
          const prev = tabButtons[(index - 1 + tabButtons.length) % tabButtons.length];
          prev.focus();
          activateTab(prev.getAttribute("data-tab"));
        }
      });
    });

    const hash = window.location.hash.replace("#", "");
    const today = new Date().toISOString().slice(0, 10);
    const tabIds = Array.from(tabButtons).map(btn => btn.getAttribute("data-tab"));

    // Priority: URL hash â†’ today â†’ first tab
    const initialTab =
      tabIds.includes(hash)
        ? hash
        : tabIds.includes(today)
        ? today
        : tabIds[0];

    activateTab(initialTab, false);
  });
</script>
